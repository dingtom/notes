<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>code on Tomding's Blog</title><link>/categories/code/</link><description>Recent content in code on Tomding's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 01 Jan 2023 14:28:53 +0800</lastBuildDate><atom:link href="/categories/code/rss.xml" rel="self" type="application/rss+xml"/><item><title>code-adb</title><link>/post/code-adb/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-adb/</guid><description>[TOC] ubuntu安装adb 卸载内置手机软件 adb devices 查看已连接的设备 adb shell pm list packages &amp;gt; a.txt 显示所有应用 adb shell pm uninstall &amp;ndash;user 0 com.miui.contentextension 传送门 adb shell pm uninstall &amp;ndash;user 0 com.android.browser 浏览器 adb shell pm uninstall &amp;ndash;user 0 com.miui.voicetrigger</description></item><item><title>code-autojs</title><link>/post/code-autojs/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-autojs/</guid><description>手册 首页Auto.js auto(); setScreenMetrics(1080, 1920); launchApp(&amp;#34;抖音极速版&amp;#34;); customsleep(getRandom(4)); while(true){ swipe(5001700,500180,500) customsleep( getrandom(4))j //if(getrandom(10)&amp;gt;5)0 comment() } function comment(){ C1ick(1023,1390); while(j++&amp;lt;3){ swipe(500,1650,500,1000,500); customSleep(getRandom(3)); } c1ick(500,1860); id(&amp;#34;pt&amp;#34;).findOne().setText(&amp;#34;1111&amp;#34;); cstomsleep(1); id(&amp;#34;q4&amp;#34;).findOne().click(); customSleep(3); back(); customSleep(5); } ## 体眠函数 @</description></item><item><title>code-bat</title><link>/post/code-bat/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-bat/</guid><description>2&amp;gt;nul 是屏蔽操作失败显示的信息，如果成功依旧显示。 &amp;gt; nul 是屏蔽操作成功显示的信息，但是出错还是会显示(即1&amp;gt;nul) pause 它会提示“请按任意键继</description></item><item><title>code-c++</title><link>/post/code-c++/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-c++/</guid><description>C++基础入门 1 C++初识 1.1 第一个C++程序 编写一个C++程序总共分为4个步骤 创建项目 创建文件 编写代码 运行程序 1.1.1 创建项目 ​ Visual Studio是我</description></item><item><title>code-ccs</title><link>/post/code-ccs/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-ccs/</guid><description>​ CSS 是层叠样式表 ( Cascading Style Sheets ) 的简称. ​ CSS 最大价值: 由 HTML 专注去做结构呈现，样式交给 CSS，即 结构 ( HTML ) 与样式( CSS ) 相分离 css语法规范 CSS 规则由两</description></item><item><title>code-element</title><link>/post/code-element/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-element/</guid><description>el-table 记住选中状态 1.el-table加上行唯一id :row-key=&amp;#34;(row) =&amp;gt; row.id&amp;#34; 注：id是该行唯一值 2.在选项列中加上 :reserve-selection=&amp;#34;true&amp;#34; 3.在完成后，需要清空选中的this.$ref</description></item><item><title>code-flask</title><link>/post/code-flask/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-flask/</guid><description>from flask import Flask App = Flask(__name__) @App.route(&amp;#39;/&amp;#39;) def index(): return&amp;#34;hello world&amp;#34; if __name__ == &amp;#34;__main__&amp;#34;: App.run(debug=True)</description></item><item><title>code-git</title><link>/post/code-git/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-git/</guid><description>Git Git和其他版本控制系统如SVN的一个不同之处就是有暂存区的概念。 Git管理的是修改，而不是文件 工作区（Working Directory）</description></item><item><title>code-html</title><link>/post/code-html/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-html/</guid><description>Web 标准提出的最佳体验方案：结构、样式、行为相分离。 简单理解：结构写到 HTML 文件中， 表现写到 CSS 文件中， 行为写到 JavaScript 文件中 HTML语法规则： HTML 标签通常</description></item><item><title>code-javascripts</title><link>/post/code-javascripts/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-javascripts/</guid><description>输出 这是一个输入框 var age = prompt(&amp;lsquo;请输入您的年龄&amp;rsquo;); alert 弹出警示框 输出的 展示给用户的 alert(&amp;lsquo;</description></item><item><title>code-markdwon</title><link>/post/code-markdwon/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-markdwon/</guid><description>生成目录 [TOC] [TOC] To Do List - [x] 学习python基础 【减号+[+空格或x+]+空格】 - [ ] 学习python网络编程 横线 --- 删除线 ~~哈哈~~ 哈哈 列表点号</description></item><item><title>code-matplot</title><link>/post/code-matplot/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-matplot/</guid><description>柱形图 主要用于比较各组数据之间的差别或数据变化情况。 折线图 趋势分析 饼图 主要用于各部分占整体的多少说明。 散点图 查找变量之间的相关性。 雷达图 各项</description></item><item><title>code-numpy</title><link>/post/code-numpy/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-numpy/</guid><description>生成随机数 随机数种子 np.random.seed(42) 设置显示小数点后两位 np.set_printoptions(precision=2) 产生元素为0到1，大小为4*3的随机数据矩阵 np.random.rand(4,3) 元素由标准正态分布产生，大小为4*3的随机数矩阵 np.random.randn(4,3)</description></item><item><title>code-pandas</title><link>/post/code-pandas/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-pandas/</guid><description>import pandas as pd a = [1, 2, 3, 4] p = [1, 2, 3, 4] r = [1, 2, 3, 4] f = [1, 2, 3, 4] df = pd.DataFrame({&amp;#39;a&amp;#39;:a, &amp;#39;p&amp;#39;:p, &amp;#39;r&amp;#39;:r, &amp;#39;f&amp;#39;:f}, index=[&amp;#39;LSTM_FCN&amp;#39;, &amp;#39;LSTM_MCNN&amp;#39;, &amp;#39;BiLSTM_FCN&amp;#39;,&amp;#39;BiLSTM_MCNN&amp;#39;]) print(df) df.to_csv(&amp;#34;./result/result.csv&amp;#34;, index=True) result = all_metric(y_trues, y_preds, method_name=method_name) df = pd.read_csv(&amp;#39;./result/result.csv&amp;#39;, index_col=0) df.loc[method_name] = result print(df) df.to_csv(&amp;#34;./result/result.csv&amp;#34;, index=True) plot＿confusion_</description></item><item><title>code-pytest</title><link>/post/code-pytest/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-pytest/</guid><description>执行命令 测试文件以 test_ 开头（以 _test 结尾也可以） 测试类以 Test 开头，并且不能带有 init 方法 测试函数以 test_ 开头 断言使用基本的 assert 即可 #!/usr/bin/env python # -*- coding: utf-8 -*- def add(x, y): return x + y</description></item><item><title>code-python</title><link>/post/code-python/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-python/</guid><description>Python是解释型语言，Python运行前不需要编译。动态类型的，这意味着你不需要在声明变量时指定类型 == 比较值，is比较ID(内存地址） a</description></item><item><title>code-seaborn</title><link>/post/code-seaborn/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-seaborn/</guid><description>import seaborn as sns %matplotlib inline sns.set(font_scale=1.5,style=&amp;#34;white&amp;#34;) sns.set_style(&amp;#39;white&amp;#39;,{&amp;#39;font.sans-serif&amp;#39;:[&amp;#39;simhei&amp;#39;,&amp;#39;Arial&amp;#39;]}) # 本次试用的数据集是Seaborn内置的tips小费数据集： data=sns.load_dataset(&amp;#34;tips&amp;#34;) data.head(5) kdeplot(核密度估计图) 核密度估计(kernel density es</description></item><item><title>code-selenium</title><link>/post/code-selenium/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-selenium/</guid><description>各个浏览器驱动下载地址： https://code.google.com/p/selenium/downloads/list 安装 chrome 浏览器驱动，下载 ChromeDriver_win32.zip(根据自己系统下载不同的版本驱动)，解压 得到 chromedriver.exe 文</description></item><item><title>code-Spark</title><link>/post/code-spark/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-spark/</guid><description>Spark **Spark是一款分布式内存计算的统一分析引擎。其特点就是对任意类型的数据进行自定义计算。**Spark的适用面非常广泛，所以，被称之为</description></item><item><title>code-vue</title><link>/post/code-vue/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-vue/</guid><description>下载Node.js并安装 首先上Node.js官网找到了本机操作系统对应的Node.js版本进行了安装包的下载。 官网：https://node</description></item><item><title>code-词云</title><link>/post/code-%E8%AF%8D%E4%BA%91/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-%E8%AF%8D%E4%BA%91/</guid><description># 挖掘客户意见 import re import collections import pandas as pd import jieba from wordcloud import WordCloud from gensim import corpora, models import matplotlib.pyplot as plt import requests # --------------------爬取短评数据 # for i in range(0,200,20): # # 通过浏览</description></item><item><title>code-调用百度api进行ocr</title><link>/post/code-%E8%B0%83%E7%94%A8%E7%99%BE%E5%BA%A6api%E8%BF%9B%E8%A1%8Cocr/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-%E8%B0%83%E7%94%A8%E7%99%BE%E5%BA%A6api%E8%BF%9B%E8%A1%8Cocr/</guid><description>pip install baidu-aip from PIL import Image from PIL import ImageGrab import keyboard import time from aip import AipOcr # 1.截图 keyboard.wait(hotkey=&amp;#34;ctrl+d&amp;#34;) # 输入键盘的触发事件 keyboard.wait(hotkey=&amp;#34;ctrl+c&amp;#34;) time.sleep(0.1) # 2.保存图片 image = ImageGrab.grabclipboard() # 把图片从剪切板保存到当前路径 image.save(&amp;#34;screen.png&amp;#34;) # 3.识别图片</description></item><item><title>code-正则表达式</title><link>/post/code-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link><pubDate>Sun, 01 Jan 2023 14:28:53 +0800</pubDate><guid>/post/code-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid><description>()内的内容表示的是一个子表达式，()本身不匹配任何东西，也不限制匹配任何东西，只是把括号内的内容作为同一个表达式来处理，例如(ab){1,</description></item></channel></rss>